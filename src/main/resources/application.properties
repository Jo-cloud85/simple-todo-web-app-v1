logging.level.org.springframework=debug
logging.level.com.in28minutes.springboot.buildtodowebapp=info

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

spring.mvc.format.date=yyyy-MM-dd

#spring.datasource.url=jdbc:h2:mem:testdb

# data.sql is executed before the entities are processed. It is when entities are processed that the 
# table gets created. If you don't set this initialization to false, there will be an error saying TODO
# table not found.
spring.jpa.defer-datasource-initialization=true

# allows you to see all the queries being generated on the console
# spring.jpa.show.dql=true

spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
spring.datasource.username=social-media-user
spring.datasource.password=dummypassword

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Whenever we are using an in-memory database, Spring boot would automatically create the tables for us.
# However, if you're connecting to a real database like MySQL, Spring Boot will not create the tables for
# us. If you'd want Spring Boot to create the tables, we would need to configure a property. 
spring.jpa.hibernate.ddl-auto=update

#/connect todos-user@localhost:3306
#docker run --detach 
#--env MYSQL_ROOT_PASSWORD=dummypassword 
#--env MYSQL_USER=social-media-user 
#--env MYSQL_PASSWORD=dummypassword 
#--env MYSQL_DATABASE=social-media-database 
#--name mysql 
#--publish 3306:3306 
#mysql:8-oracle